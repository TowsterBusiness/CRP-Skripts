#TODO: Tolerance for spamming & swearing




#TODO: REASONS
# Chat
# Action / Behavior
# Exploit / Hack -ing
# Item
# Character / Player

#TODO: ACTION RANKING
# 4 - Permban
# 3 - Tempban
# 2 - Mute
# 1 - Detention
# 0 - Warn

#TODO: ACTION RATIO
# 100% - Perm
# 
#

#Punishments
# Detention 0-15m
# Mute 0-30m
# Tempban 1-12h
# Tempban 1-3d
#NOTE: Stack punishments

#Database - p@.*
# player::@punished::<cat>::<punish>.<len> -> time | reason
# staff::@staff::<cat>::<punish>.<len> -> time | reason

#==========================================================================================================#
# -------------------------------------------------------------------------------------------------------- #
#                                           PUNISH
# -------------------------------------------------------------------------------------------------------- #
#==========================================================================================================#

#options:
    #TODO: Tolerances

on Skript start:
    wait 5 ticks
    load yaml "plugins/Skript/yaml/punish.yml" as "punish"

    punishHelp()
    delete {doc::*}
    
on chat:
    set {_now} to unix timestamp of now
    set {_len} to metadata value "mute" of player
    if {_now} > {_len}:
        clear metadata value "mute" of player

    # Muted
    metadata value "mute" of player is set
    set {_len} to {_len} - {_now}
    set {_time} to "%{_len}% seconds" parsed as timespan
    send "&cYou are currently muted for &7%{_time}%"
    cancel event


#==========================================================================================================#
# -------------------------------------------------------------------------------------------------------- #
#                                           FUNCTION
# -------------------------------------------------------------------------------------------------------- #
#==========================================================================================================#

function formatTime(t: text) :: number:
    set {_x::*} to split {_t} by " "
    loop {_x::*}:
        set {_type} to last 1 character of loop-value
        set {_time} to subtext of loop-value from characters 1 to (length of loop-value - 1) parsed as number
        set {_time} to {_time} * 24 if {_type} is "d" # hours
        set {_time} to {_time} * 60 if {_type} is "h" or "d" # minutes
        set {_time} to {_time} * 60 # seconds
        set {_r} to {_r} + {_time}
    return {_r}
    


function punishHelp():
    set {_f} to "punish-doc"
    set {_d} to "reason"
    set {_h} to "head"
    set {_h2} to "subhead"
    set {_b} to "body"
    deleteDoc("punish-doc")
    loop yaml node keys "punish" from "punish":
        set {_count} to {_count} + 1
        wait 2 tick
    createDoc({_f}, {_d}, {_h}, "&4&m------------------------------")
    createDoc({_f}, {_d}, {_h}, "&c&l Punish Reasons &7[%{_count}%]")
    createDoc({_f}, {_d}, {_h}, " ")
    
    set {_prev} to "none"
    loop yaml node keys "punish" from "punish":
        set {_next::*} to yaml value "punish.%loop-val%" from "punish" split at " "
        if {_next::1} is not {_prev::1}:
            createDoc({_f}, {_d}, {_h2}, " &4&l%{_next::1} in strict proper case%", "body")
        set {_desc} to yaml value "description.%loop-val%" from "punish"
        createDoc({_f}, {_d}, {_b}, "&4&l > &r%{_desc}%")

        set {_prev::*} to yaml value "punish.%loop-val%" from "punish" split at " "
        wait 2 tick
    save yaml "punish-doc"


function punish(p1: player, p2: offline player, cat: text, reason: text, warn: text = "false"):
    loop yaml node keys "punish" from "punish":

        set {_p::*} to yaml value "punish.%loop-val%" from "punish" split at " "
        if {_p::2} is "none":
            set {_match} to loop-val
        else:
            set {_match} to {_p::2}

        {_cat} matches {_match}
        set {_day} to now formatted as "MM/dd/yyyy"

        #Reason Puller
        if {_reason} is not set:
            set {_reason::*} to yaml value "description.%loop-val%" from "punish" split at "$h"
            set {_reason} to subtext of {_reason::2} from characters 1 to (length of {_reason::2} - 1)

        #Temporary Punisher
        if {_p::3} is "mute":
            set metadata value "mute" of {_p2} to unix timestamp of now + formatTime({_p::4})
        else if {_p::3} is "ban":
            set {_time} to formatTime({_p::4})
            ban {_p2} due to "%{_cat}% | %{_reason}%" for "%{_time}% seconds" parsed as timespan
            ban {_p2} by IP due to "%{_cat}% | %{_reason}%" for "%{_time}% seconds" parsed as timespan
            kick {_p2} due to "You have been kicked for %{_cat}% | %{_reason}%"
        else if {_p::3} is "pardon":
            clear metadata value "mute" of {_p2}
            unban {_p2}
            unban {_p2} by IP



