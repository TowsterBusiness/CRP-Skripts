# On join player is assigned id = into list::* 
# When near players, playername is written into other players ID
# During ID trade, playernames added to group ID's

#-DUMMY-
#Everyone carries a wallet
#When near Trade contact business cards
#Player send messages, that are sent to business cards

# ID's
# L - Local (Group @Top, Players @Bottom)
# G - Global
# S - Staff
# C - Special Channels

# Toggles
# radius - Chat Radius
# silent - Join/Leave Announcement

# Permissions
# notify.channel.events
# debug.channels.type

#TODO: /chat <channel choice> or /channel <channel choice>

#==========================================================================================================#
# -------------------------------------------------------------------------------------------------------- #
#                                           LOCAL
# -------------------------------------------------------------------------------------------------------- #
#==========================================================================================================#

on Skript start:
    set {channel::local} to true
    set {channel::local.id} to true
    set {channel::available.id} to true


on Skript stop:
    delete {channel::*}


on join:
    #NOTE: TRACKER
    set {_sizeId} to size of {channel::local.id::*}
    #Scan Available ID
    loop {channel::available.id::*}:
        set {_id} to loop-index
        delete {channel::available.id::%{_id}%}
        stop loop
    if {_id} is not set:
        #Next New ID
        if {_sizeId} is set:
            set {_id} to {_sizeId} + 1
        #Default ID
        else:
            set {_id} to 1
    
    set {channel::local.id::%player's uuid%} to {_id}
    send "[CH] Connected %player% of %player's uuid% to Local:%{_id}%" to console

    #NOTE: LOCAL WALLET - store contacts
    set {channel::local::%player's uuid%} to true
    set {channel::local::%player's uuid%::%{_id}%} to "%player's uuid% 1"


on Skript start:
    set {channel::local} to true
    set {channel::local.id} to true
    set {channel::available.id} to true


on Skript stop:
    delete {channel::*}


on join:
    #NOTE: TRACKER
    set {_sizeId} to size of {channel::local.id::*}
    #Scan Available ID
    loop {channel::available.id::*}:
        set {_id} to loop-index
        delete {channel::available.id::%{_id}%}
        stop loop
    if {_id} is not set:
        #Next New ID
        if {_sizeId} is set:
            set {_id} to {_sizeId} + 1
        #Default ID
        else:
            set {_id} to 1
    
    set {channel::local.id::%player's uuid%} to {_id}
    send "[CH] Connected %player% of %player's uuid% to Local:%{_id}%" to console

    #NOTE: LOCAL WALLET - store contacts
    set {channel::local::%player's uuid%} to true
    set {channel::local::%player's uuid%::%{_id}%} to "%player's uuid% 1"


on leave:
    #AVAILABLE ID
    set {_id} to {channel::local.id::%player's uuid%}
    set {channel::available.id::%{_id}%} to true
    send "[CH] Disconnected %player% of %player's uuid% from Local:%{_id}%" to console
    #CLEANUP
    delete {channel::local::%player's uuid%::*}
    delete {channel::local.id::%player's uuid%}


#FIXME: Sometimes player loses own business card / persistance failed
on chat:
    remove all players from chat recipients
    #NOTE: Flushing - reloading wallet
    loop {channel::local::%player's uuid%::*}:
        set {_w::*} to loop-value split at " "
        if {_w::2} parsed as integer is 1:
            set {_wallet::%loop-index%} to "%{_w::1}% 1" 
    set {channel::local::%player's uuid%::*} to {_wallet::*}
        

    #NOTE: Radius - receiving and sending contact info
    loop players in radius 5 of player:
        if loop-player is not player:
            #Host Speaking - recieving client contact id's
            set {_id} to {channel::local.id::%loop-player's uuid%}
            set {channel::local::%player's uuid%::%{_id}%} to "%loop-player's uuid% 0"
            #Client Listening - sending host contact id's
            loop {_wallet::*}:
                set {_w::*} to loop-value-2 split at " "
                set {channel::local::%loop-player's uuid%::%loop-index%} to "%{_w::1}% 0"


    #NOTE: Chat
    loop {channel::local::%player's uuid%::*}:
        set {_t::*} to loop-value split at " "
        add {_t::1} parsed as player to {_p::*}
    send "&7&lLC &7%player's prefix%%player's display name% » &f%message%" to {_p::*}
    #send "&7&lL00%{_id}% %player% » &f%message%" to {_p::*}
    send "&a&lGC &7%player's prefix%%player% » &f%message%" to {_p::*}
    send "&d&lSC &7%player's prefix%%player% » &f%message%"
    send "%player's prefix%%player% » %message%" to console
        


